<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.let.server.domain.user.mapper.UserMapper">
    <insert id="save" useGeneratedKeys="true" keyProperty="userId">
        insert into users(user_id, username, password, student_id, real_name, role)
        values (#{userId}, #{username}, #{password}, #{studentId}, #{realName}, #{role})
    </insert>

    <select id="findByUsername" resultType="User">
        select user_id, username, password, student_id, real_name, role
        from users
        where username = #{username}
    </select>

    <select id="existsByUsername" resultType="boolean">
        select count(*) > 0
        from users
        where username = #{username}
    </select>

    <select id="findAll" resultType="User">
        select user_id, username, password, student_id, real_name, role
        from users
    </select>

    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM users
    </select>

    <select id="countByGrade" resultType="java.util.Map">
        SELECT g.grade, COALESCE(u.count, 0) AS count
        FROM (
            SELECT 1 AS grade
            UNION ALL SELECT 2
            UNION ALL SELECT 3
            ) g
            LEFT JOIN (
            SELECT student_id DIV 1000 AS grade, COUNT (*) AS count
            FROM users
            GROUP BY student_id DIV 1000
            ) u
        ON g.grade = u.grade
        ORDER BY g.grade
    </select>
</mapper>